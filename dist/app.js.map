{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"express\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"dotenv\"","webpack:///external \"bcrypt\"","webpack:///external \"cluster\"","webpack:///external \"body-parser\"","webpack:///external \"mongodb\"","webpack:///external \"cookie-parser\"","webpack:///external \"os\"","webpack:///external \"http\"","webpack:///./src/env/environment.js","webpack:///./src/core/db-accessor.js","webpack:///./src/middleware/define-platform.js","webpack:///./src/middleware/check-cors.js","webpack:///./src/middleware/auth.js","webpack:///./src/env/Environment.js","webpack:///./src/util/generate-id.js","webpack:///./src/common/query-result.js","webpack:///./src/routes/account.js","webpack:///./src/routes/logic.js","webpack:///./src/core/app.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","Environment","console","log","production","port","host","secretKey","mongodbUser","mongodbPassword","allowedDomainsCount","allowedDomains","appKey","config","path","process","env","PRODUCTION","LOG","PORT","HOST","SECRET_KEY","MONGODB_USER","MONGODB_PASSWORD","ALLOWED_DOMAINS_COUNT","push","APP_KEY","init","DBAccessor","client","db","uri","MongoClient","useNewUrlParser","useUnifiedTopology","poolSize","connect","definePlatform","req","res","next","origin","headers","allowOrigin","includes","allowApp","clientType","checkCors","header","auth","_id","token","decoded","jwt","verify","e","checkToken","generateId","options","length","noNumbers","noLetters","noCapitalized","bunch","result","Math","round","random","router","Router","post","async","email","password","body","user","collection","find","toArray","status","json","equal","bcrypt","compare","sign","expiresIn","firstName","lastName","salt","genSalt","encryptedPassword","hash","insertOne","query","group","owner","groupId","memberId","absence","index","aggregate","$match","$project","$indexOfArray","exists","_group","_member","members","absences","a","date","updateOne","$pull","$push","groups","removedIds","newMembers","app","express","use","cookieParser","bodyParser","urlencoded","extended","account","logic","cluster","isMaster","clear","pid","display","cpus","fork","on","worker","code","signal","server","http","createServer","listen","message"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = require(\"express\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"dotenv\");","module.exports = require(\"bcrypt\");","module.exports = require(\"cluster\");","module.exports = require(\"body-parser\");","module.exports = require(\"mongodb\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"os\");","module.exports = require(\"http\");","import { config } from 'dotenv';\r\n\r\nclass Environment {\r\n  static display() {\r\n    console.log('<------------Config------------>');\r\n    console.log(`Production: ${Environment.production}`);\r\n    console.log(`Log: ${Environment.log}`);\r\n    console.log(`Port: ${Environment.port}`);\r\n    console.log(`Host: ${Environment.host}`);\r\n    console.log(`Secret key: ${Environment.secretKey}`);\r\n    console.log(`MongoDB username: ${Environment.mongodbUser}`);\r\n    console.log(`MongoDB password: ${Environment.mongodbPassword}`);\r\n    console.log(`Allowed domains count: ${Environment.allowedDomainsCount}`);\r\n    console.log(`Allowed domains: ${Environment.allowedDomains}`);\r\n    console.log(`App key: ${Environment.appKey}`);\r\n    console.log('<------------Config-----------/>');\r\n  }\r\n\r\n  static init() {\r\n    config({ path: '.env' });\r\n\r\n    Environment.production = process.env.PRODUCTION === 'true';\r\n    Environment.log = process.env.LOG === 'true';\r\n\r\n    Environment.port = process.env.PORT || 3000;\r\n    Environment.host = process.env.HOST || 'localhost';\r\n\r\n    Environment.secretKey = process.env.SECRET_KEY || '';\r\n\r\n    Environment.mongodbUser = process.env.MONGODB_USER || '';\r\n    Environment.mongodbPassword = process.env.MONGODB_PASSWORD || '';\r\n\r\n    Environment.allowedDomainsCount = process.env.ALLOWED_DOMAINS_COUNT || 0;\r\n    Environment.allowedDomains = [];\r\n\r\n    for (var i = 0; i < Environment.allowedDomainsCount; i++) {\r\n      Environment.allowedDomains.push(process.env[`ALLOWED_DOMAIN_${i}`]);\r\n    }\r\n\r\n    Environment.appKey = process.env.APP_KEY || '';\r\n  }\r\n}\r\n\r\nEnvironment.init();\r\n\r\nexport default Environment;\r\n","import { MongoClient } from 'mongodb';\r\nimport Environment from '@/env/environment';\r\n\r\nclass DBAccessor {\r\n  static db() {\r\n    return DBAccessor.client.db('absence-manager');\r\n  }\r\n\r\n  static init() {\r\n    const uri = `mongodb+srv://${Environment.mongodbUser}:${Environment.mongodbPassword}@cluster0-oxkrf.mongodb.net/test?retryWrites=true&w=majority`;\r\n\r\n    DBAccessor.client = new MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true, poolSize: 100 });\r\n    DBAccessor.client.connect();\r\n  }\r\n}\r\n\r\nexport default DBAccessor;\r\n","import Environment from '@/env/environment';\r\n\r\nfunction definePlatform(req, res, next) {\r\n  const origin = req.get('origin') || '';\r\n  const appKey = req.headers['app-key'];\r\n\r\n  const allowOrigin = !!origin && Environment.allowedDomains.includes(origin);\r\n  const allowApp = !!appKey && Environment.appKey === appKey;\r\n\r\n  if (allowOrigin) {\r\n    req.clientType = 0;\r\n    req.origin = origin;\r\n  } else if (allowApp) {\r\n    req.clientType = 1;\r\n  }\r\n\r\n  if (allowOrigin || allowApp) {\r\n    next();\r\n  }\r\n}\r\n\r\nexport default definePlatform;\r\n","function checkCors(req, res, next) {\r\n  if (req.clientType === 0) {\r\n    res.header('Access-Control-Allow-Origin', req.origin);\r\n  } else {\r\n    res.header('Access-Control-Allow-Origin', '*');\r\n  }\r\n\r\n  res.header('Access-Control-Allow-Credentials', 'true');\r\n  res.header('Access-Control-Allow-Headers', '*');\r\n\r\n  next();\r\n}\r\n\r\nexport default checkCors;\r\n","import Environment from '@/env/environment';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nfunction checkToken(token) {\r\n  try {\r\n    const decoded = jwt.verify(token, Environment.secretKey);\r\n    return decoded ? decoded._id : false;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction auth(req, res, next) {  \r\n  const token = req.headers['token'];\r\n\r\n  const _id = checkToken(token);\r\n\r\n  req.auth = _id;\r\n\r\n  next();\r\n}\r\n\r\nexport default auth;\r\n","import { config } from 'dotenv';\r\n\r\nclass Environment {\r\n  static display() {\r\n    console.log('<------------Config------------>');\r\n    console.log(`Production: ${Environment.production}`);\r\n    console.log(`Log: ${Environment.log}`);\r\n    console.log(`Port: ${Environment.port}`);\r\n    console.log(`Host: ${Environment.host}`);\r\n    console.log(`Secret key: ${Environment.secretKey}`);\r\n    console.log(`MongoDB username: ${Environment.mongodbUser}`);\r\n    console.log(`MongoDB password: ${Environment.mongodbPassword}`);\r\n    console.log(`Allowed domains count: ${Environment.allowedDomainsCount}`);\r\n    console.log(`Allowed domains: ${Environment.allowedDomains}`);\r\n    console.log(`App key: ${Environment.appKey}`);\r\n    console.log('<------------Config-----------/>');\r\n  }\r\n\r\n  static init() {\r\n    config({ path: '.env' });\r\n\r\n    Environment.production = process.env.PRODUCTION === 'true';\r\n    Environment.log = process.env.LOG === 'true';\r\n\r\n    Environment.port = process.env.PORT || 3000;\r\n    Environment.host = process.env.HOST || 'localhost';\r\n\r\n    Environment.secretKey = process.env.SECRET_KEY || '';\r\n\r\n    Environment.mongodbUser = process.env.MONGODB_USER || '';\r\n    Environment.mongodbPassword = process.env.MONGODB_PASSWORD || '';\r\n\r\n    Environment.allowedDomainsCount = process.env.ALLOWED_DOMAINS_COUNT || 0;\r\n    Environment.allowedDomains = [];\r\n\r\n    for (var i = 0; i < Environment.allowedDomainsCount; i++) {\r\n      Environment.allowedDomains.push(process.env[`ALLOWED_DOMAIN_${i}`]);\r\n    }\r\n\r\n    Environment.appKey = process.env.APP_KEY || '';\r\n  }\r\n}\r\n\r\nEnvironment.init();\r\n\r\nexport default Environment;\r\n","const letters = 'abcdefghigklmnopqrstuvwxyz';\r\nconst capitalized = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nconst numbers = '1234567890';\r\n\r\nfunction generateId(options) {\r\n  const {\r\n    length,\r\n    noNumbers,\r\n    noLetters,\r\n    noCapitalized\r\n  } = options;\r\n\r\n  var bunch = '';\r\n\r\n  if (!noNumbers) {\r\n    bunch += numbers;\r\n  }\r\n\r\n  if (!noLetters) {\r\n    bunch += letters;\r\n  }\r\n\r\n  if (!noCapitalized && !noLetters) {\r\n    bunch += capitalized;\r\n  }\r\n\r\n  var result = '';\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    const index = Math.round(Math.random() * (bunch.length - 1));\r\n\r\n    result += bunch[index];\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport default generateId;\r\n","const SUCCESS = 'SUCCESS';\r\nconst ERROR = 'ERROR';\r\nconst EXISTS = 'EXISTS';\r\n\r\nexport { SUCCESS, ERROR, EXISTS };","import Environment from '@/env/Environment';\r\nimport DBAccessor from '@/core/db-accessor';\r\nimport generateId from '@/util/generate-id';\r\n\r\nimport { Router } from 'express';\r\nimport bcrypt from 'bcrypt';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nimport { SUCCESS, ERROR, EXISTS } from '@/common/query-result';\r\n\r\nconst router = Router();\r\n\r\nrouter.post('/login', async (req, res) => {\r\n  const { email, password } = req.body;\r\n\r\n  /**\r\n   * Finding the user with this email in the database.\r\n   */\r\n  const user = (\r\n    await DBAccessor.db()\r\n      .collection('private')\r\n      .find({\r\n        email,\r\n      })\r\n      .toArray()\r\n  )[0];\r\n\r\n  /**\r\n   * If user is not found, firing an error.\r\n   */\r\n  if (!user) {\r\n    res.status(202).json({\r\n      result: 'ERROR',\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Comparing the encrypted password and the decrypted one.\r\n   * bcrypt.\r\n   */\r\n  const equal = await bcrypt.compare(password, user.password);\r\n  \r\n  /**\r\n   * Generating token with this user's id.\r\n   * Expires in one day.\r\n   * \r\n   * token: string | false\r\n   */\r\n  const token = \r\n    equal\r\n\r\n      ? jwt.sign({\r\n        _id: user._id\r\n      }, Environment.secretKey, { expiresIn: '24h' })\r\n\r\n      : false;\r\n\r\n  const result = equal ? SUCCESS : ERROR;\r\n\r\n  res.status(200).json({\r\n    result,\r\n    token\r\n  });\r\n});\r\n\r\nrouter.post('/signup', async (req, res) => {\r\n  const { firstName, lastName, email, password } = req.body;\r\n\r\n  /**\r\n   * Checking if the user exists.\r\n   * If so, not continuing, sending back an error.\r\n   */\r\n  const userExists = (\r\n    await DBAccessor.db()\r\n      .collection('private')\r\n      .find({\r\n        email,\r\n      })\r\n      .toArray()\r\n  )[0];\r\n\r\n  if (userExists) {\r\n    res.status(202).json({\r\n      result: EXISTS,\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Generating an id for the new user.\r\n   */\r\n  const _id = generateId({\r\n    length: 22,\r\n  });\r\n\r\n  /**\r\n   * Encrypting the user's password to prepare it to be stored in the database.\r\n   */\r\n  const salt = await bcrypt.genSalt(10);\r\n  const encryptedPassword = await bcrypt.hash(password, salt);\r\n\r\n  /**\r\n   * Creating two items. The first one for \r\n   * storing the private data, and the second\r\n   * one for storing the public data. \r\n   * \r\n   * With the same _id ofc.\r\n   */\r\n  await DBAccessor.db().collection('private').insertOne({\r\n    _id,\r\n    email,\r\n    password: encryptedPassword,\r\n  });\r\n\r\n  await DBAccessor.db().collection('public').insertOne({\r\n    _id,\r\n    firstName,\r\n    lastName,\r\n  });\r\n\r\n  res.status(200).json({\r\n    result: SUCCESS,\r\n  });\r\n});\r\n\r\n/**\r\n * Simply checking if the user's token is\r\n * present and still valid.\r\n */\r\nrouter.get('/check_auth', async (req, res) => {\r\n  const { token } = req.query;\r\n\r\n  try {\r\n    const result = jwt.verify(token, Environment.secretKey);\r\n  \r\n    res.status(200).json(result)\r\n  } catch (e) {  \r\n    res.status(200).json();\r\n  }\r\n});\r\n\r\nexport default router;\r\n","import Environment from '@/env/Environment';\r\nimport DBAccessor from '@/core/db-accessor';\r\nimport generateId from '@/util/generate-id';\r\n\r\nimport { Router } from 'express';\r\n\r\nimport { SUCCESS, ERROR, EXISTS } from '@/common/query-result';\r\n\r\nconst router = Router();\r\n\r\nrouter.post('/add_group', async (req, res) => {\r\n  const { group } = req.body;\r\n\r\n  const _id = req.auth;\r\n\r\n  if (!_id) {\r\n    res.status(200).json({\r\n      result: ERROR,\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  await DBAccessor.db()\r\n    .collection('groups')\r\n    .insertOne({\r\n      ...group,\r\n      owner: _id\r\n    });\r\n\r\n  res.status(200).json({\r\n    result: SUCCESS,\r\n  });\r\n});\r\n\r\nrouter.post('/add_absence', async (req, res) => {\r\n  const { groupId, memberId, absence } = req.body;\r\n\r\n  const _id = req.auth;\r\n\r\n  if (!_id) {\r\n    res.status(200).json({\r\n      result: ERROR,\r\n    });\r\n\r\n    return;\r\n  }\r\n  \r\n  const index = (await DBAccessor.db()\r\n    .collection('groups')\r\n    .aggregate([\r\n      {\r\n        $match: {\r\n          _id: groupId\r\n        }\r\n      },\r\n      {\r\n        $project: {\r\n          index: { $indexOfArray: ['$members._id', memberId] },\r\n        },\r\n      },\r\n    ]).toArray())[0].index;\r\n\r\n  var exists = false;\r\n\r\n  const _group = (await DBAccessor.db().collection('groups').find({\r\n    _id: groupId,\r\n  }).toArray())[0];\r\n\r\n  if (_group) {\r\n    const _member = _group.members.find(m => m._id === memberId);\r\n\r\n    if (_member) {\r\n      exists = !!_member.absences.find(a => a.date === absence.date);\r\n    }\r\n  }\r\n\r\n  if (exists) {\r\n    await DBAccessor.db()\r\n      .collection('groups')\r\n      .updateOne(\r\n        {\r\n          _id: groupId,\r\n        },\r\n        {\r\n          $pull: {\r\n            [`members.${index}.absences`]: {\r\n              date: absence.date\r\n            },\r\n          },\r\n        }\r\n      );\r\n  }\r\n\r\n  await DBAccessor.db()\r\n    .collection('groups')\r\n    .updateOne(\r\n      {\r\n        _id: groupId,\r\n      },\r\n      {\r\n        $push: {\r\n          [`members.${index}.absences`]: absence,\r\n        },\r\n      }\r\n    );\r\n\r\n  res.status(200).json({\r\n    result: SUCCESS,\r\n  });\r\n});\r\n\r\nrouter.get('/get_groups', async (req, res) => {\r\n  const _id = req.auth;\r\n\r\n  if (!_id) {\r\n    res.status(200).json({\r\n      result: ERROR,\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  const groups = await DBAccessor.db().collection('groups').find({\r\n    owner: _id\r\n  }).toArray();\r\n\r\n  res.status(200).json(groups)\r\n});\r\n\r\nrouter.post('/edit_group', async (req, res) => {\r\n  const _id = req.auth;\r\n\r\n  if (!_id) {\r\n    res.status(200).json({\r\n      result: ERROR,\r\n    });\r\n\r\n    return;\r\n  }\r\n  \r\n  const { groupId, removedIds, newMembers } = req.body;\r\n\r\n  for (var i = 0; i < removedIds.length; i++) {\r\n    await DBAccessor.db().collection('groups').updateOne({\r\n      _id: groupId\r\n    }, {\r\n      $pull: {\r\n        members: {\r\n          _id: removedIds[i]\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  for (var i = 0; i < newMembers.length; i++) {\r\n    await DBAccessor.db().collection('groups').updateOne({\r\n      _id: groupId\r\n    }, {\r\n      $push: {\r\n        members: {\r\n          _id: newMembers[i]._id,\r\n          name: newMembers[i].name,\r\n          absences: []\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  res.status(200).json('')\r\n});\r\n\r\nexport default router;\r\n","import express from 'express';\r\n\r\nimport bodyParser from 'body-parser';\r\n\r\nimport cookieParser from 'cookie-parser';\r\n\r\nimport definePlatform from '@/middleware/define-platform';\r\nimport checkCors from '@/middleware/check-cors';\r\nimport auth from '@/middleware/auth';\r\n\r\nimport account from '@/routes/account';\r\nimport logic from '@/routes/logic';\r\n\r\nconst app = express();\r\n\r\napp.use(cookieParser());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(bodyParser.json());\r\n\r\n/**\r\n * The only goal of this route is to wake up the heroku server,\r\n * which falls asleep every 30 minutes.\r\n * \r\n * https://cron-job.org/ makes an http-request every 15 minutes.\r\n */\r\napp.get('/', (req, res) => {\r\n  res.status(200).json({\r\n    result: 'updated'\r\n  });\r\n});\r\n\r\n/**\r\n * Define whether the client is\r\n * connected due to the app or the website.\r\n */\r\napp.use(definePlatform);\r\n\r\n/**\r\n * My own cors middleware based on\r\n * the method the client is connected with.\r\n */\r\napp.use(checkCors);\r\n\r\n/**\r\n * Auth based on jsonwebtoken.\r\n */\r\napp.use(auth);\r\n\r\n/**\r\n * Endpoints.\r\n */\r\napp.use('/account', account);\r\napp.use('/logic', logic);\r\n\r\nexport default app;","import Environment from '@/env/environment';\r\nimport DBAccessor from '@/core/db-accessor';\r\nimport app from '@/core/app';\r\nimport cluster from 'cluster';\r\nimport { cpus } from 'os';\r\nimport http from 'http';\r\n\r\nif (cluster.isMaster && Environment.production) {\r\n  console.clear();\r\n  console.log(`Master ${process.pid} is running..`);\r\n  Environment.display();\r\n\r\n  for (var i = 0; i < cpus().length; i++) {\r\n    cluster.fork();\r\n  }\r\n\r\n  cluster.on('exit', (worker, code, signal) => {\r\n    console.log(`worker ${worker.process.pid} died`);\r\n  });\r\n} else {\r\n  const server = http.createServer(app);\r\n\r\n  DBAccessor.init();\r\n\r\n  server.listen(Environment.port, Environment.host, () => {\r\n    const message = Environment.production\r\n      ? `Worker ${process.pid} listening on port ${Environment.port}`\r\n      : `Server started on ${Environment.host}:${Environment.port}`;\r\n\r\n    if (!Environment.production) {\r\n      console.clear();\r\n    }\r\n\r\n    console.log(message);\r\n\r\n    if (!Environment.production) {\r\n      Environment.display();\r\n    }\r\n  });\r\n}\r\n"],"sourceRoot":""}